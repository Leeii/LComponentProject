apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

android {
    compileSdkVersion 26



    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    // mvp-clean 框架底层
    api 'com.leeiidesu:sdk-base:2.1.0'
    // 路由管理器
    implementation 'com.leeiidesu:router-service:1.0.3'
    // ImageLoader glide实现
    implementation 'com.leeiidesu:imageloader-glide:1.0.4'

    // Dagger dependencies
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"

    //自定义组件包
    api 'com.leeiidesu:l-widget:1.0-SNAPSHOT'

    // ARouter 路由
    api 'com.alibaba:arouter-api:1.2.4'

}



// 进行数字签名
signing {
    required { false }
    sign configurations.archives
}

// type显示指定任务类型或任务, 这里指定要执行Javadoc这个task,这个task在gradle中已经定义
task androidJavadocs(type: Javadoc) {
    // 设置源码所在的位置
    source = android.sourceSets.main.java.sourceFiles
}

// 生成javadoc.jar
task androidJavadocsJar(type: Jar) {
    // 指定文档名称
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

// 生成sources.jar
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

// 产生相关配置文件的任务
artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}


tasks.create('uploadComponent', Upload.class) {
    configuration = project.configurations.archives
    group = 'upload'
    repositories.mavenDeployer {
        beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

        repository(url: 'http://leeiidesu.com/nexus/content/repositories/snapshots/') {
            authentication(userName: "${username}", password: "${password}")
        }
        pom.version = 'dev-SNAPSHOT'
        pom.artifactId = 'l-component'
        pom.groupId = 'com.leeiidesu'
        pom.name = project.name
        pom.packaging = "aar"
    }
}
